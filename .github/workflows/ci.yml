# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Ci-test3

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

      # Service containers to run with `container-job`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres:15
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: secret
            POSTGRES_USER: root
            POSTGRES_DB: simple_bank

          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - name: set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.6
        id: go

      - name: Check out code in go module directory
        uses: actions/checkout@v2


      - name: Install golang-migrate
        run:  |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-386.tar.gz   | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate


      - name: Run Migrations
        run: make migrateup

      - name: Test
        run: make test
